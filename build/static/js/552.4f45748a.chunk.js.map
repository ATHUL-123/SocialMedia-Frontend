{"version":3,"file":"static/js/552.4f45748a.chunk.js","mappings":"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","sources":["components/User/MyPost/MyPost.jsx"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { format } from 'date-fns';\r\nimport { AiFillHeart, AiOutlineComment, AiFillEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport CommentModal from '../Comments/Comment';\r\nimport EditPost from '../Modals/EditPost';\r\nimport { getCommentCount } from '../../../services/User/apiMethods';\r\nimport LikedUsers from '../LikedUsers/LikedUsers';\r\n\r\n\r\nimport DeleteConfirm from '../Modals/DeleteConfirm';\r\n\r\n\r\n\r\nfunction MyPost({ post }) {\r\n  const [isEditPost, setIsEditPost] = useState(false);\r\n  const [showComments,setShowComments] = useState(false)\r\n  const [commentCount,setCommentCount] = useState(0)\r\n  const [likeCount,setLikeCount]       = useState(0) \r\n  const [openLiked,setOpenLiked] =useState(false)\r\n  const handleShowLiked =()=>{\r\n    setOpenLiked(!openLiked)\r\n} \r\n  useEffect(()=>{\r\ngetCommentCount(post._id)\r\n   .then((response)=>{\r\n    \r\n    console.log('ressss',response);\r\n    setCommentCount(response.commentCount)\r\n    setLikeCount(response.likeCount)\r\n\r\n   })\r\n   .catch((error)=>{\r\n    console.log(error);\r\n   })\r\n  },[])\r\n\r\n  \r\n  const toggleEditModal =()=>{\r\n    setIsEditPost(!isEditPost)\r\n  }\r\n\r\n  const formattedDate = format(new Date(post.date), 'MMMM dd, yyyy');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [openConfirm,setOpenConfirm] = useState(false)\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setOpenConfirm(!openConfirm);\r\n  };\r\n\r\n  const toggleComment =()=>{\r\n   \r\n    setShowComments(!showComments)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n    {openLiked && <LikedUsers isOpen={openLiked} toggleModal={handleShowLiked} postId={post._id}/>}\r\n      {showComments && <CommentModal isOpen={showComments} onClose={toggleComment} post={post}/> }\r\n      <img className=\"object-cover object-center w-full h-64 rounded-lg lg:h-80\" src={post.image} alt=\"\"/>\r\n      <div className=\"mt-8\">\r\n        <span className=\"text-blue-500 uppercase\">{post.userId.userName}</span>\r\n        <h1 className=\"mt-4 text-xl font-semibold text-gray-800 dark:text-white\">{post.title}</h1>\r\n        <p className=\"mt-2 text-gray-500 dark:text-gray-400\">{post.description}</p>\r\n        <div className=\"flex items-center justify-between mt-4\">\r\n          <div>\r\n            <a href=\"#\" className=\"text-lg font-medium text-gray-700 dark:text-gray-300 hover:underline hover:text-gray-500\">{post.userId.userName}</a>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">{formattedDate}</p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"relative flex items-center space-x-1\">\r\n              <AiFillHeart onClick={()=>handleShowLiked(post._id)} className=\"h-6 w-6 text-gray-400 cursor-pointer\" />\r\n              <span className=\"text-gray-400\">{likeCount}</span>\r\n              <div onClick={toggleComment}>\r\n              <AiOutlineComment  className=\"h-6 w-6 text-gray-400 cursor-pointer\" />\r\n              </div>\r\n              <span className=\"text-gray-400\">{commentCount}</span>\r\n            </div>\r\n            <div className=\"relative\">\r\n            <div className=\"relative inline-block\">\r\n      {/* Dropdown toggle button */}\r\n      <button\r\n        onClick={toggleDropdown}\r\n        className=\"relative z-10 block p-2 text-gray-700 bg-white border border-transparent rounded-md dark:text-white focus:border-blue-500 focus:ring-opacity-40 dark:focus:ring-opacity-40 focus:ring-blue-300 dark:focus:ring-blue-400 focus:ring dark:bg-gray-800 focus:outline-none\"\r\n      >\r\n        <svg\r\n          className=\"w-5 h-5 text-gray-800 dark:text-white\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 20 20\"\r\n          fill=\"currentColor\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      </button>\r\n\r\n      {/* Dropdown menu */}\r\n      {isOpen && (\r\n        <div\r\n          onClick={() => setIsOpen(false)}\r\n          className=\"fixed inset-0 z-10 w-full h-full\"\r\n        ></div>\r\n      )}\r\n     <div\r\n  className={`absolute right-0 z-20 w-48 py-2 mt-2 origin-top-right bg-white rounded-md shadow-xl dark:bg-gray-800 ${\r\n    isOpen ? 'block' : 'hidden'\r\n  }`}\r\n  onMouseEnter={() => setIsOpen(true)} // Show the dropdown when mouse enters\r\n  onMouseLeave={() => setIsOpen(false)} // Hide the dropdown when mouse leaves\r\n>\r\n  <button\r\n  onClick={toggleEditModal}\r\n    className=\"block w-full px-4 py-3 text-sm text-gray-600 capitalize transition-colors text-left duration-300 transform dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white\"\r\n  >\r\n    Edit\r\n  </button>\r\n  <button\r\n    onClick={toggleModal}\r\n    className=\"block w-full px-4 py-3 text-sm text-red-600 capitalize transition-colors text-left duration-300 transform dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white\"\r\n  >\r\n    Delete\r\n  </button>\r\n</div>\r\n\r\n    </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    {openConfirm && <DeleteConfirm isOpen={openConfirm} onClose={toggleModal} postId={post._id} />}\r\n\r\n    {isEditPost && <EditPost isOpen={isEditPost} onClose={toggleEditModal} post={post}/>}\r\n</>\r\n  \r\n  );\r\n}\r\n\r\nexport default MyPost;\r\n"],"names":["_ref","post","isEditPost","setIsEditPost","useState","showComments","setShowComments","commentCount","setCommentCount","likeCount","setLikeCount","openLiked","setOpenLiked","handleShowLiked","useEffect","getCommentCount","_id","then","response","console","log","catch","error","toggleEditModal","formattedDate","format","Date","date","isOpen","setIsOpen","openConfirm","setOpenConfirm","toggleModal","toggleComment","_jsxs","_Fragment","children","_jsx","LikedUsers","postId","CommentModal","onClose","className","src","image","alt","userId","userName","title","description","href","AiFillHeart","onClick","AiOutlineComment","toggleDropdown","xmlns","viewBox","fill","fillRule","d","clipRule","concat","onMouseEnter","onMouseLeave","DeleteConfirm","EditPost"],"sourceRoot":""}